---

- name: 'Gather facts'
  hosts: 'all'
  gather_facts: true

- name: 'Install nginx3'
  hosts: 'k3s1'
  gather_facts: false
  become: false
  module_defaults:
    kubernetes.core.helm:
      kubeconfig: './k3s-kubeconfig'
    kubernetes.core.k8s:
      kubeconfig: './k3s-kubeconfig'
    kubernetes.core.k8s_info:
      kubeconfig: './k3s-kubeconfig'

  tasks:

    - name: 'Create the nginx3 namespace'
      delegate_to: 'localhost'
      kubernetes.core.k8s:
        name: 'nginx3'
        api_version: 'v1'
        kind: 'Namespace'
        state: 'present'

    - name: 'Install Nginx via helm chart'
      # running this from vagrant fails, if we target localhost directly
      delegate_to: 'localhost'
      kubernetes.core.helm:
        chart_ref: 'oci://registry-1.docker.io/bitnamicharts/nginx'
        release_name: 'nginx3'
        release_namespace: 'nginx3'
        values:
          service:
            type: ClusterIP
          tls:
            enabled: false
          ingress:
            enabled: true
            hostname: "nginx3.{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}.sslip.io"
            ingressClassName: 'traefik'

    - name: 'Wait until all pods in the nginx3 namespace are running'
      delegate_to: localhost
      become: false
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Pod
        namespace: nginx3
      register: pod_list
      until:
        '
        pod_list | json_query("resources[*].status.phase") | unique | sort == ["Running"]
        or
        pod_list | json_query("resources[*].status.phase") | unique | sort == ["Running", "Succeeded"]
        '
      retries: 12
      delay: 10

    - name: 'Wait until all pods in the nginx3 namespace are ready'
      delegate_to: localhost
      become: false
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Pod
        namespace: nginx3
      register: pod_list_ready
      until:
        '
        pod_list_ready | json_query("resources[*].status.containerStatuses[*].ready") | unique | sort == [[true]]
        '
      retries: 12
      delay: 10

    - name: 'Wait for URL to be available'
      delegate_to: 'localhost'
      ansible.builtin.uri:
        url: "http://nginx3.{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}.sslip.io"
      register: result
      until: "result.status == 200"
      retries: 31
      delay: 10

    - name: 'Output URL'
      delegate_to: 'localhost'
      ansible.builtin.debug:
        msg: "You can access the nginx3 deployment here: http://nginx3.{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}.sslip.io"
